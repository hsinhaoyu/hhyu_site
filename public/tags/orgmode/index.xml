<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>orgmode on Cortically Magnified</title>
    <link>https://www.hhyu.org/tags/orgmode/</link>
    <description>Recent content in orgmode on Cortically Magnified</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Mar 2021 14:13:51 +1100</lastBuildDate><atom:link href="https://www.hhyu.org/tags/orgmode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple exercises with grep, sed and awk in org-mode</title>
      <link>https://www.hhyu.org/posts/regexp/</link>
      <pubDate>Tue, 23 Mar 2021 14:13:51 +1100</pubDate>
      
      <guid>https://www.hhyu.org/posts/regexp/</guid>
      <description>For text processing, I never bothered to learn classic Unix tools such as sed and awk, because everything is easier Python. The syntax of sed and awk just appeared to be too arcane to me. However, recently I realize that for many ad-hoc tasks, even writing a Python script is too much overhead. This motivated me to learn to use regular expressions directly in the command line.
This also gave me an excuse to play with literate programming in org-mode.</description>
    </item>
    
    <item>
      <title>Writing the Emacs configuration script in org-mode: a simple example of literate programming</title>
      <link>https://www.hhyu.org/posts/literate_config/</link>
      <pubDate>Tue, 05 Jan 2021 14:16:59 +1100</pubDate>
      
      <guid>https://www.hhyu.org/posts/literate_config/</guid>
      <description>Program like writers do Programming is traditionally seen as an exercise that translates human thoughts into a format that computers can understand. As a result, the ideas behind the program can become obscured and fragmented in the source code. This is why reading code requires so much mental effort. For me, reading code often feels like solving a puzzle, or reading modernist/postmodernist novels where events are narrated out of sequence. The concept of literate programming was introduced by Donald Knuth in the 80&amp;rsquo;s to address this issue.</description>
    </item>
    
  </channel>
</rss>
