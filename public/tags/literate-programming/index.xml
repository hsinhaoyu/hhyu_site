<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>literate-programming on Cortically Magnified</title>
    <link>https://www.hhyu.org/tags/literate-programming/</link>
    <description>Recent content in literate-programming on Cortically Magnified</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Sep 2023 22:42:10 +1000</lastBuildDate><atom:link href="https://www.hhyu.org/tags/literate-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mixing code and markups in LilyPond (or, coding for guitarists)</title>
      <link>https://www.hhyu.org/posts/lilypond_first/</link>
      <pubDate>Tue, 12 Sep 2023 22:42:10 +1000</pubDate>
      
      <guid>https://www.hhyu.org/posts/lilypond_first/</guid>
      <description>I wrote this post primarily from the perspective of a beginner guitarist trying to solve a practical problem, but the way I approached it naturally landed on functional programming and literate programming. So, you might want to stay around even if you are not interested in playing the guitar. This post is mostly about my experience of learning a very interesting music markup language LilyPond, which has a symbiotic relationship with the GNU Guile Scheme.</description>
    </item>
    
    <item>
      <title>Writing the Emacs configuration script in org-mode: a simple example of literate programming</title>
      <link>https://www.hhyu.org/posts/literate_config/</link>
      <pubDate>Tue, 05 Jan 2021 14:16:59 +1100</pubDate>
      
      <guid>https://www.hhyu.org/posts/literate_config/</guid>
      <description>Program like writers do Programming is traditionally seen as an exercise that translates human thoughts into a format that computers can understand. As a result, the ideas behind the program can become obscured and fragmented in the source code. This is why reading code requires so much mental effort. For me, reading code often feels like solving a puzzle, or reading modernist/postmodernist novels where events are narrated out of sequence. The concept of literate programming was introduced by Donald Knuth in the 80&amp;rsquo;s to address this issue.</description>
    </item>
    
  </channel>
</rss>
